/*
 * Thicket
 * https://github.com/d-plaindoux/thicket
 *
 * Copyright (c) 2015 Didier Plaindoux
 * Licensed under the LGPL2 license.
 */

module Example.Test

import Data

import System.Console
import System.Runtime

import Spec.Core
import Spec.Logger.Console

def operationAssertions : TestLogger -> unit = l -> {
    description l "Number operations"
        it "expect 2+4 to be 6" {
            expect (2+4) toBe 6
        }
        it "expect 2-4 to be -2" {
            expect (2-4) toBe (-2)
        }
        it "expect 2*4 to be 8" {
            expect (2*4) toBe 8
        }
        it "expect 2/4 to be 0.5" {
            expect (2/4) toBe 0.5
        }
    done 
}

def predicateAssertions : TestLogger -> unit = l -> {
    description l "Number predicates"
        it "expect 2==2 to be true" {
            expect (2==2) toBe true
        }
        it "expect 2==3 to be false" {
            expect (2==3) toBe false
        }
        it "expect 2<?2 to be false" {
            expect (2<?2) toBe false
        }
        it "expect 2<?3 to be true" {
            expect (2<?3) toBe true
        }
    done 
}

def testSuite : TestLogger -> unit = logger -> {
    do {
      List[
        operationAssertions;
        predicateAssertions
      ] each $ r -> r logger
    } return ()
}

testSuite consoleLogger