/*
 * Thicket
 * https://github.com/d-plaindoux/thicket
 *
 * Copyright (c) 2015-2016 Didier Plaindoux
 * Licensed under the LGPL2 license.
 */

module Data.JSon

from Data.Pair import Pair
from Data.String import string
from Data.Number import number
from Data.List import list

type JSon {
    model JSonNull
    model JSonString { _ : string }
    model JSonNumber { _ : number }
    model JSonArray  { _ : list[JSon] }
    model JSonObject { _ : list[(string,JSon)] }
}

class jsonPrettyPrinter this:JSon {
    toString : string
} {
    def JSonNull.toString   = "null"
    def JSonString.toString = $"\"$(this._)\""
    def JSonNumber.toString = this._ toString
    def JSonArray.toString  = $"[$(this._ mkString encode ",")]"
    def JSonObject.toString = 
        let pairToString = j -> "\"" + j._1 + "\":" + $ encode j._2 in
            $"{$(this._ mkString pairToString ",")}"
}

def encode : JSon -> string = data -> {
    jsonPrettyPrinter data toString
}