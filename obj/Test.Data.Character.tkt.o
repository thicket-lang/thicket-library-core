{"namespace":"Test.Data.Character","objcode":[[10,["comparableAssertions",[[6,[[2,"Spec.Core.description"],[3,1],[4],[7,[[2,"Data.String.string"],[1,"Character as a sequence"],[4]]],[4],[5,"it"],[7,[[2,"Data.String.string"],[1,"expect ('a' == 'a') to be true"],[4]]],[4],[7,[[2,"Spec.Core.expect"],[7,[[2,"Data.Character.char"],[1,"a"],[4],[5,"=="],[7,[[2,"Data.Character.char"],[1,"a"],[4]]],[4]]],[4],[5,"toBe"],[7,[[2,"Data.Boolean.true"]]],[4]]],[4],[5,"it"],[7,[[2,"Data.String.string"],[1,"expect (a' == b') to be false"],[4]]],[4],[7,[[2,"Spec.Core.expect"],[7,[[2,"Data.Character.char"],[1,"a"],[4],[5,"=="],[7,[[2,"Data.Character.char"],[1,"b"],[4]]],[4]]],[4],[5,"toBe"],[7,[[2,"Data.Boolean.false"]]],[4]]],[4],[13,"done"]]]]]],[10,["matcherAssertions",[[6,[[2,"Spec.Core.description"],[3,1],[4],[7,[[2,"Data.String.string"],[1,"Character as a matcher"],[4]]],[4],[5,"it"],[7,[[2,"Data.String.string"],[1,"expect ('a' match case 'a' => 1 otherwise => 2) to be 1"],[4]]],[4],[7,[[2,"Spec.Core.expect"],[7,[[2,"Data.Character.char"],[1,"a"],[4],[5,"match"],[5,"case"],[7,[[2,"Data.Character.char"],[1,"a"],[4]]],[4],[5,"=>"],[7,[[2,"Data.Number.number"],[1,1],[4]]],[4],[5,"otherwise"],[5,"=>"],[7,[[2,"Data.Number.number"],[1,2],[4]]],[4]]],[4],[5,"toBe"],[7,[[2,"Data.Number.number"],[1,1],[4]]],[4]]],[4],[5,"it"],[7,[[2,"Data.String.string"],[1,"expect ('a' match case 'a' => 1 otherwise => 2) to be 2"],[4]]],[4],[7,[[2,"Spec.Core.expect"],[7,[[2,"Data.Character.char"],[1,"b"],[4],[5,"match"],[5,"case"],[7,[[2,"Data.Character.char"],[1,"a"],[4]]],[4],[5,"=>"],[7,[[2,"Data.Number.number"],[1,1],[4]]],[4],[5,"otherwise"],[5,"=>"],[7,[[2,"Data.Number.number"],[1,2],[4]]],[4]]],[4],[5,"toBe"],[7,[[2,"Data.Number.number"],[1,2],[4]]],[4]]],[4],[13,"done"]]]]]],[10,["operatorsAssertions",[[6,[[2,"Spec.Core.description"],[3,1],[4],[7,[[2,"Data.String.string"],[1,"Character operators"],[4]]],[4],[5,"it"],[7,[[2,"Data.String.string"],[1,"expect ('a' + 1) to be 'b'"],[4]]],[4],[7,[[2,"Spec.Core.expect"],[7,[[2,"Data.Character.char"],[1,"a"],[4],[5,"+"],[7,[[2,"Data.Number.number"],[1,1],[4]]],[4]]],[4],[5,"toBe"],[7,[[2,"Data.Character.char"],[1,"b"],[4]]],[4]]],[4],[5,"it"],[7,[[2,"Data.String.string"],[1,"expect ('a' + 1) to be 'b'"],[4]]],[4],[7,[[2,"Spec.Core.expect"],[7,[[2,"Data.Character.char"],[1,"a"],[4],[5,"+"],[7,[[2,"Data.Number.number"],[1,1],[4]]],[4]]],[4],[5,"toBe"],[7,[[2,"Data.Character.char"],[1,"b"],[4]]],[4]]],[4],[13,"done"]]]]]],[10,["specialsAssertions",[[6,[[2,"Spec.Core.description"],[3,1],[4],[7,[[2,"Data.String.string"],[1,"Character specials"],[4]]],[4],[5,"it"],[7,[[2,"Data.String.string"],[1,"expect ('\t' toString) to be \"<TAB>\""],[4]]],[4],[7,[[2,"Spec.Core.expect"],[2,"Data.Character.char"],[1,"\t"],[4],[5,"toString"],[4],[5,"toBe"],[7,[[2,"Data.String.string"],[1,"\t"],[4]]],[4]]],[4],[5,"it"],[7,[[2,"Data.String.string"],[1,"expect ('\n' toString) to be \"<CR>\""],[4]]],[4],[7,[[2,"Spec.Core.expect"],[2,"Data.Character.char"],[1,"\n"],[4],[5,"toString"],[4],[5,"toBe"],[7,[[2,"Data.String.string"],[1,"\n"],[4]]],[4]]],[4],[5,"it"],[7,[[2,"Data.String.string"],[1,"expect ('\u0000' toString) to be \"\""],[4]]],[4],[7,[[2,"Spec.Core.expect"],[2,"Data.Character.char"],[1,"\u0000"],[4],[5,"toString"],[4],[5,"toBe"],[7,[[2,"Data.String.string"],[1,"\u0000"],[4]]],[4]]],[4],[13,"done"]]]]]],[10,["testSuite",[[6,[[2,"Lang.Do.do"],[7,[[2,"Data.List.List"],[5,"["],[7,[[2,"Test.Data.Character.comparableAssertions"]]],[4],[5,";"],[7,[[2,"Test.Data.Character.matcherAssertions"]]],[4],[5,";"],[7,[[2,"Test.Data.Character.operatorsAssertions"]]],[4],[5,";"],[7,[[2,"Test.Data.Character.specialsAssertions"]]],[4],[5,"]"],[5,"each"],[6,[[3,2],[3,1],[12]]],[4]]],[4],[5,"return"],[7,[[2,"Data.Unit.unit"]]],[12]]]]]]],"main":[[[2,"Test.Data.Character.testSuite"],[7,[[2,"Spec.Logger.Console.consoleLogger"]]],[4]]]}