{"namespace":"Test.Data.Boolean","objcode":[[10,["comparableAssertions",[[6,[[2,"Spec.Core.description"],[3,1],[4],[7,[[2,"Data.String.string"],[1,"Boolean as a comparable"],[4]]],[4],[5,"it"],[7,[[2,"Data.String.string"],[1,"expect (true == true) to be true"],[4]]],[4],[7,[[2,"Spec.Core.expect"],[7,[[2,"Data.Boolean.true"],[5,"=="],[7,[[2,"Data.Boolean.true"]]],[4]]],[4],[5,"toBe"],[7,[[2,"Data.Boolean.true"]]],[4]]],[4],[5,"it"],[7,[[2,"Data.String.string"],[1,"expect (false == false) to be true"],[4]]],[4],[7,[[2,"Spec.Core.expect"],[7,[[2,"Data.Boolean.false"],[5,"=="],[7,[[2,"Data.Boolean.false"]]],[4]]],[4],[5,"toBe"],[7,[[2,"Data.Boolean.true"]]],[4]]],[4],[5,"it"],[7,[[2,"Data.String.string"],[1,"expect (false == true) to be false"],[4]]],[4],[7,[[2,"Spec.Core.expect"],[7,[[2,"Data.Boolean.false"],[5,"=="],[7,[[2,"Data.Boolean.true"]]],[4]]],[4],[5,"toBe"],[7,[[2,"Data.Boolean.false"]]],[4]]],[4],[13,"done"]]]]]],[10,["matcherAssertions",[[6,[[2,"Spec.Core.description"],[3,1],[4],[7,[[2,"Data.String.string"],[1,"Boolean as a matcher"],[4]]],[4],[5,"it"],[7,[[2,"Data.String.string"],[1,"expect (true match case true => 1 otherwise => 2) to be 1"],[4]]],[4],[7,[[2,"Spec.Core.expect"],[7,[[2,"Data.Boolean.true"],[5,"match"],[5,"case"],[7,[[2,"Data.Boolean.true"]]],[4],[5,"=>"],[7,[[2,"Data.Number.number"],[1,1],[4]]],[4],[5,"otherwise"],[5,"=>"],[7,[[2,"Data.Number.number"],[1,2],[4]]],[4]]],[4],[5,"toBe"],[7,[[2,"Data.Number.number"],[1,1],[4]]],[4]]],[4],[5,"it"],[7,[[2,"Data.String.string"],[1,"expect (false match case true => 1 otherwise => 2) to be 2"],[4]]],[4],[7,[[2,"Spec.Core.expect"],[7,[[2,"Data.Boolean.false"],[5,"match"],[5,"case"],[7,[[2,"Data.Boolean.true"]]],[4],[5,"=>"],[7,[[2,"Data.Number.number"],[1,1],[4]]],[4],[5,"otherwise"],[5,"=>"],[7,[[2,"Data.Number.number"],[1,2],[4]]],[4]]],[4],[5,"toBe"],[7,[[2,"Data.Number.number"],[1,2],[4]]],[4]]],[4],[13,"done"]]]]]],[10,["operatorsAssertions",[[6,[[2,"Spec.Core.description"],[3,1],[4],[7,[[2,"Data.String.string"],[1,"Boolean operators"],[4]]],[4],[5,"it"],[7,[[2,"Data.String.string"],[1,"expect (true || true) to be true"],[4]]],[4],[7,[[2,"Spec.Core.expect"],[7,[[2,"Data.Boolean.true"],[5,"||"],[7,[[2,"Data.Boolean.true"]]],[4]]],[4],[5,"toBe"],[7,[[2,"Data.Boolean.true"]]],[4]]],[4],[5,"it"],[7,[[2,"Data.String.string"],[1,"expect (true || false) to be true"],[4]]],[4],[7,[[2,"Spec.Core.expect"],[7,[[2,"Data.Boolean.true"],[5,"||"],[7,[[2,"Data.Boolean.false"]]],[4]]],[4],[5,"toBe"],[7,[[2,"Data.Boolean.true"]]],[4]]],[4],[5,"it"],[7,[[2,"Data.String.string"],[1,"expect (false || true) to be true"],[4]]],[4],[7,[[2,"Spec.Core.expect"],[7,[[2,"Data.Boolean.false"],[5,"||"],[7,[[2,"Data.Boolean.true"]]],[4]]],[4],[5,"toBe"],[7,[[2,"Data.Boolean.true"]]],[4]]],[4],[5,"it"],[7,[[2,"Data.String.string"],[1,"expect (false || false) to be true"],[4]]],[4],[7,[[2,"Spec.Core.expect"],[7,[[2,"Data.Boolean.false"],[5,"||"],[7,[[2,"Data.Boolean.false"]]],[4]]],[4],[5,"toBe"],[7,[[2,"Data.Boolean.false"]]],[4]]],[4],[5,"it"],[7,[[2,"Data.String.string"],[1,"expect (true && true) to be true"],[4]]],[4],[7,[[2,"Spec.Core.expect"],[7,[[2,"Data.Boolean.true"],[5,"&&"],[7,[[2,"Data.Boolean.true"]]],[4]]],[4],[5,"toBe"],[7,[[2,"Data.Boolean.true"]]],[4]]],[4],[5,"it"],[7,[[2,"Data.String.string"],[1,"expect (true && false) to be false"],[4]]],[4],[7,[[2,"Spec.Core.expect"],[7,[[2,"Data.Boolean.true"],[5,"&&"],[7,[[2,"Data.Boolean.false"]]],[4]]],[4],[5,"toBe"],[7,[[2,"Data.Boolean.false"]]],[4]]],[4],[5,"it"],[7,[[2,"Data.String.string"],[1,"expect (false && true) to be false"],[4]]],[4],[7,[[2,"Spec.Core.expect"],[7,[[2,"Data.Boolean.false"],[5,"&&"],[7,[[2,"Data.Boolean.true"]]],[4]]],[4],[5,"toBe"],[7,[[2,"Data.Boolean.false"]]],[4]]],[4],[5,"it"],[7,[[2,"Data.String.string"],[1,"expect (false && false) to be true"],[4]]],[4],[7,[[2,"Spec.Core.expect"],[7,[[2,"Data.Boolean.false"],[5,"&&"],[7,[[2,"Data.Boolean.false"]]],[4]]],[4],[5,"toBe"],[7,[[2,"Data.Boolean.false"]]],[4]]],[4],[5,"it"],[7,[[2,"Data.String.string"],[1,"expect (true fold 1 2) to be 1"],[4]]],[4],[7,[[2,"Spec.Core.expect"],[7,[[2,"Data.Boolean.true"],[5,"fold"],[7,[[2,"Data.Number.number"],[1,1],[4]]],[4],[7,[[2,"Data.Number.number"],[1,2],[4]]],[4]]],[4],[5,"toBe"],[7,[[2,"Data.Number.number"],[1,1],[4]]],[4]]],[4],[5,"it"],[7,[[2,"Data.String.string"],[1,"expect (false fold 1 2) to be 2"],[4]]],[4],[7,[[2,"Spec.Core.expect"],[7,[[2,"Data.Boolean.false"],[5,"fold"],[7,[[2,"Data.Number.number"],[1,1],[4]]],[4],[7,[[2,"Data.Number.number"],[1,2],[4]]],[4]]],[4],[5,"toBe"],[7,[[2,"Data.Number.number"],[1,2],[4]]],[4]]],[4],[13,"done"]]]]]],[10,["testSuite",[[6,[[2,"Lang.Do.do"],[7,[[2,"Data.List.List"],[5,"["],[7,[[2,"Test.Data.Boolean.comparableAssertions"]]],[4],[5,";"],[7,[[2,"Test.Data.Boolean.matcherAssertions"]]],[4],[5,";"],[7,[[2,"Test.Data.Boolean.operatorsAssertions"]]],[4],[5,"]"],[5,"each"],[6,[[3,2],[3,1],[12]]],[4]]],[4],[5,"return"],[7,[[2,"Data.Unit.unit"]]],[12]]]]]]],"main":[[[2,"Test.Data.Boolean.testSuite"],[7,[[2,"Spec.Logger.Console.consoleLogger"]]],[4]]]}